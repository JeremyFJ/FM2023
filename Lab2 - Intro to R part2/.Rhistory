mean(fish_dat$WTCPUE)
sum(fish_dat$WTCPUE)
sd(fish_dat$WTCPUE)
# Q3
fish_dat = subset(nbs, SID<40000 & between(YEAR, 2000, 2022))
mean(fish_dat$WTCPUE)
sum(fish_dat$WTCPUE)
sd(fish_dat$WTCPUE)
# Q6
world <- map_data("world")
wtcpue_ebs = ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
wtcpue_ebs
# Q6
nbs_map = aggregate(data=nbs, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
View(nbs_map)
# Q6
nbs_map = subset(nbs, SID<40000)
nbs_map = aggregate(data=nbs_map, WTCPUE~HAUL, FUN=sum)
# Q6
nbs_map = subset(nbs, SID<40000)
nbs_map = aggregate(data=nbs_map, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Berring Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
nbs_map = aggregate(data=nbs, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
world <- map_data("world")
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Berring Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
ebs_map = subset(ebs1982, SID<40000)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs1982, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$longitude = aggregate(data=ebs1982, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
world <- map_data("world")
wtcpue_ebs = ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
wtcpue_ebs
wtcpue_ebs +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = ebs_map, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Berring Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
nbs_map = subset(nbs, SID<40000)
nbs_map = aggregate(data=nbs_map, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
world <- map_data("world")
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern Berring Sea Trawl Survey (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
nrow(nbs_map)
nrow(ebs_map)
ebs_map = aggregate(data=ebs1982, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs1982, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$longitude = aggregate(data=ebs1982, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
nrow(ebs_map)
# Q6
nbs_map = subset(nbs, SID<40000)
nbs_map = aggregate(data=nbs_map, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
nrow(nbs_map)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern Berring Sea Trawl Survey (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
View(ebs_map)
ebs_all = read.csv('ebs_all.csv')
# Q6
nbs_map = subset(nbs, SID<40000)
nbs_map = aggregate(data=nbs_map, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs_map, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs_map, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
# Q6
nbs_map = subset(nbs, SID<40000)
nbs_map = aggregate(data=nbs_map, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs_map, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs_map, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
nbs_map$latitude = aggregate(data=nbs, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
ebs_map = subset(ebs_all, SID<40000)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map = subset(ebs_all, SID<40000)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
names(ebs_all)
View(ebs_all)
ebs_map = subset(ebs_all, SID<40000)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
class(ebs_map$WTCPUE)
ebs_map$WTCPUE = as.numeric(ebs_map$WTCPUE)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean)$LATITUDE[1:245] # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$longitude = aggregate(data=ebs_all, LONGITUDE~HAUL, FUN=mean)$LONGITUDE[1:245]
newmap = rbind(nbs_map, ebs_map)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern Berring Sea Trawl Survey (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
nrow(newmap)
View(newmap)
ebs_map = subset(ebs_all, SID<40000)
ebs_map$WTCPUE = as.numeric(ebs_map$WTCPUE)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean)$LATITUDE[1:245] # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean)
aggregate(data=ebs_all, LATITUDE~HAUL, FUN=list)
na.omit(ebs_all)
ebs_all = na.omit(ebs_all)
ebs_map = subset(ebs_all, SID<40000)
ebs_map$WTCPUE = as.numeric(ebs_map$WTCPUE)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=list)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=list)$LATITUDE[1:245] # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean)$LATITUDE[1:245] # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$longitude = aggregate(data=ebs_all, LONGITUDE~HAUL, FUN=mean)$LONGITUDE[1:245]
newmap = rbind(nbs_map, ebs_map)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern Berring Sea Trawl Survey (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
ebs_all = read.csv('ebs_all.csv')
ebs_map = subset(ebs_all, SID<40000, na.rm=T)
ebs_map$WTCPUE = as.numeric(ebs_map$WTCPUE)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean)
aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean, na.rm=T)
which(unique(ebs_all$HAUL))
unique(ebs_all$HAUL)
class(ebs_all$HAUL)
class(nbs$HAUL)
ebs_map = subset(ebs_all, SID<40000, na.rm=T)
ebs_map$WTCPUE = as.numeric(ebs_map$WTCPUE)
ebs_map$HAUL = as.numeric(ebs_map$HAUL)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean, na.rm=T)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
class(ebs_all$LATITUDE)
ebs_all = read.csv('ebs_all.csv')
ebs_all$WTCPUE = as.numeric(ebs_all$WTCPUE)
ebs_all$HAUL = as.numeric(ebs_all$HAUL)
ebs_all$LATITUDE = as.numeric(ebs_all$LATITUDE)
ebs_all$LONGITUDE = as.numeric(ebs_all$LONGITUDE)
ebs_map = subset(ebs_all, SID<40000, na.rm=T)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean, na.rm=T)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$longitude = aggregate(data=ebs_all, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
newmap = rbind(nbs_map, ebs_map)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern Berring Sea Trawl Survey (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
write.csv(ebs_all, "ebs_all.csv", row.names = F)
ebs_all = read.csv('ebs_all.csv')
class(ebs_all$LATITUDE)
nbs_map = subset(nbs, SID<40000)
nbs_map = aggregate(data=nbs_map, WTCPUE~HAUL, FUN=sum)
nbs_map$latitude = aggregate(data=nbs, LATITUDE~HAUL, FUN=mean)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
nbs_map$longitude = aggregate(data=nbs, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
ebs_all = read.csv('ebs_all.csv')
ebs_map = subset(ebs_all, SID<40000, na.rm=T)
ebs_map = aggregate(data=ebs_map, WTCPUE~HAUL, FUN=sum)
ebs_map$latitude = aggregate(data=ebs_all, LATITUDE~HAUL, FUN=mean, na.rm=T)$LATITUDE # I can take the mean here because latitude is the same for each haul number, otherwise you should not take the mean latitude ever
ebs_map$longitude = aggregate(data=ebs_all, LONGITUDE~HAUL, FUN=mean)$LONGITUDE
newmap = rbind(nbs_map, ebs_map)
world <- map_data("world")
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern Berring Sea Trawl Survey (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 25) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern and Eastern Berring Sea Trawl Surveys (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 30) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern and Eastern Berring Sea Trawl Surveys (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 40) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern and Eastern Berring Sea Trawl Surveys (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 20) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern and Eastern Berring Sea Trawl Surveys (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
# Q4
fish_sum = as.data.frame(table(nbs$COMMON))
fish_sum = fish_sum[-c(1),] # From inspecting the new dataframe, the first row is empty and therefore needs to be removed
head(fish_sum)
# Q4
fish_sum = as.data.frame(table(nbs$COMMON))
head(fish_sum)
# Q4
fish_sum = as.data.frame(table(nbs$COMMON))
fish_sum = fish_sum[-c(1),] # From inspecting the new dataframe, the first row is empty and therefore needs to be removed
head(fish_sum)
# Q4
nbs_inv = subset(nbs, SID<40000)
fish_sum = as.data.frame(table(nbs_inv$COMMON))
fish_sum = fish_sum[-c(1),] # From inspecting the new dataframe, the first row is empty and therefore needs to be removed
head(fish_sum)
H_i = abdiv::shannon(fish_sum$Freq)
H_i
evenness = H_i/log(nrow(fish_sum))
evenness
# Q5
hist(fish_sum$Freq,
main = paste0("Species Occurences (n species=",nrow(fish_sum),")"), # Use paste and paste0 to write text and code output together
xlab = "Number of occurrences",
ylab = "Number of species",
col = "bisque"
)
ebs_all = read.csv("ebs_all.csv") # Eastern Bering Sea survey
write.csv(ebs_all, "ebs1982_2019.csv", row.names = F)
ggplot() +
geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
) +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = newmap, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 20) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Northern and Eastern Berring Sea Trawl Surveys (1982-2019)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
summary(nbs)
summary(ebs_all)
# Q2
hauldat =aggregate(data=nbs, WTCPUE~HAUL, FUN=mean)
ggplot() +
geom_point(data = hauldat,
aes(x = HAUL, y = WTCPUE)) +
labs(x = "HAUL #", y = "WTCPUE") + theme_bw()  # set axis breaks (min, max, by)
# Q2
hauldat =aggregate(data=ebs, WTCPUE~HAUL, FUN=mean)
ggplot() +
geom_point(data = hauldat,
aes(x = HAUL, y = WTCPUE)) +
labs(x = "HAUL #", y = "WTCPUE") + theme_bw()  # set axis breaks (min, max, by)
ebs = read.csv('ebs_all.csv')
ebs = read.csv('ebs1982_2019.csv')
# Q2
hauldat =aggregate(data=ebs, WTCPUE~HAUL, FUN=mean)
ggplot() +
geom_point(data = hauldat,
aes(x = HAUL, y = WTCPUE)) +
labs(x = "HAUL #", y = "WTCPUE") + theme_bw()  # set axis breaks (min, max, by)
# Q2
hauldat =aggregate(data=nbs, WTCPUE~HAUL, FUN=mean)
ggplot() +
geom_point(data = hauldat,
aes(x = HAUL, y = WTCPUE)) +
labs(x = "HAUL #", y = "WTCPUE") + theme_bw()  # set axis breaks (min, max, by)
boxplot(nbs$WTCPUE)
boxplot(ebs$WTCPUE)
boxplot(ebs$NUMCPUE)
hist(nbs$WTCPUE)
hist(nbs$BOT_DEPTH)
hist(nbs$BOT_TEMP)
# Q1
par=mfrow(1,2)
hist(nbs$BOT_DEPTH)
length(which(nbs$BOT_TEMP==-9999))
nrow(nbs)
data.frame(temperature = c(3,2,5,2,-1000), depth=c(10,10,10,10,10))
dat = data.frame(temperature = c(3,2,5,2,-1000), depth=c(10,10,10,10,10))
dat
dat = dat[-c(dat$temperature==-1000),]
dat
dat = dat[dat$temperature==-1000,]
dat
dat = data.frame(temperature = c(3,2,5,2,-1000), depth=c(10,10,10,10,10))
dat = dat[dat$temperature==-1000,]
dat
dat = data.frame(temperature = c(3,2,5,2,-1000), depth=c(10,10,10,10,10))
dat = dat[!dat$temperature==-1000,]
dat
# Q1
nbs_rm = nbs[!nbs$BOT_TEMP==-9999]
# Q1
nbs_rm = nbs[!nbs$BOT_TEMP==-9999,]
par(mfrow=c(1,2))
hist(nbs_rm$BOT_DEPTH)
hist(nbs_rm$BOT_TEMP)
head(ebs)
hist(nbs_rm$BOT_DEPTH)
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", color="green")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="green")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="green", border = "black")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80))
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80), main="Northern Bering Sea Trawl Survey Depth")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80), main="Northern Bering Sea Trawl Survey Depth (1982-2019")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80), main="Northern Bering Sea Trawl Survey Depth (1982-2019)")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80), ylim=c(0, 4000), main="Northern Bering Sea Trawl Survey Depth (1982-2019)")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80), ylim=c(0, 4500), main="Northern Bering Sea Trawl Survey Depth (1982-2019)")
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80), ylim=c(0, 5000), main="Northern Bering Sea Trawl Survey Depth (1982-2019)")
hist(nbs_rm$BOT_TEMP)
par(mfrow=c(1,2))
hist(nbs_rm$BOT_DEPTH, xlab="Depth (m)", ylab="Trawls", col="black", border = "green",
xlim=c(0, 80), ylim=c(0, 5000), main="Northern Bering Sea Trawl Survey Depth (1982-2019)")
hist(nbs_rm$BOT_TEMP, xlab="Temperature (C)", ylab="Trawls", col="black", border="green",
xlim=c(-5, 18), main="Northern Bering Sea Trawl Survey Temperature (1982-2019)")
